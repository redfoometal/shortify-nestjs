version: '3.9'
services:
    api:
        container_name: api_container
        build:
            context: .
            dockerfile: Dockerfile
            target: production
        env_file:
            - .env
        ports:
            - '${PORT}:${PORT}'
        volumes:
            - ./src:/usr/src/app/src
        depends_on:
            - postgres
        networks:
            - app_network

    postgres:
        image: postgres:latest
        command:
            - 'postgres'
            - '-c'
            - 'max_connections=50'
            - '-c'
            - 'shared_buffers=1GB'
            - '-c'
            - 'effective_cache_size=4GB'
            - '-c'
            - 'work_mem=16MB'
            - '-c'
            - 'maintenance_work_mem=512MB'
            - '-c'
            - 'random_page_cost=1.1'
            - '-c'
            - 'temp_file_limit=10GB'
            - '-c'
            - 'log_min_duration_statement=200ms'
            - '-c'
            - 'idle_in_transaction_session_timeout=10s'
            - '-c'
            - 'lock_timeout=1s'
            - '-c'
            - 'statement_timeout=60s'
            - '-c'
            - 'shared_preload_libraries=pg_stat_statements'
            - '-c'
            - 'pg_stat_statements.max=10000'
            - '-c'
            - 'pg_stat_statements.track=all'
        environment:
            POSTGRES_DB: ${POSTGRES_DATABASE}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: '/var/lib/postgresql/data/pgdata'
        volumes:
            - postgres-data:/var/lib/postgresql/data
        ports:
            - '5432:5432'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}']
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        networks:
            - app_network
volumes:
    postgres-data:

networks:
    app_network:
